name: On Push to Main Branch

on:
  push:
    branches:
      - main

concurrency:
  group: deployment
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version-check.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if version changed
        id: version-check
        run: |
          current_version=$(jq -r .version package.json)
          base_version=$(git show HEAD^:package.json | jq -r .version)
          if [ "$current_version" != "$base_version" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  create-release-pr:
    name: Create or update Release PR
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Create or update Release PR
        uses: changesets/action@v1
        with:
          publish: false
          title: "Changeset Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gh-release:
    name: GH Release
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Get release version
        id: get-version
        run: |
          echo "result=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
      - name: Get release body
        run: |
          # Get the PR body to use in the GH release body
          gh pr list --search "$(git rev-parse HEAD)" --state merged --json number,body --jq '"This release was merged in PR #" + (.[0].number | tostring) + "\n\n" + (.[0].body | split("# Releases")[1:] | join("# Releases"))' > pr_body.tmp
      - name: Create release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          tag_name: v${{ steps.get-version.outputs.result }}
          name: Release v${{ steps.get-version.outputs.result }}
          body_path: pr_body.tmp

  npm-publish:
    name: Publish to npmjs.com
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Publish to npmjs.com
        run: .github/scripts/npm-publish.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # deploy-to-smithery: # TODO: Implement this when the Smithery API supports this
  #   name: Deploy to Smithery
  #   runs-on: ubuntu-latest
  #   needs: npm-publish
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Deploy to Smithery
  #       run: .github/scripts/deploy-to-smithery.sh
  #       env:
  #         SMITHERY_API_KEY: ${{ secrets.SMITHERY_API_KEY }}
